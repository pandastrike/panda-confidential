# Panda Confidential API
::

include "helpers"

::

# Properties

## nacl

The TweetNaCl.js module imported by Confidential. Useful for bypassing the Confidential API and accessing TweetNaCl directly. Changing this property will not affect the behavior of an instance of the API.

## key


## keyPair

# Functions
::

include "fn/confidential"
include "fn/random-bytes"
include "fn/encrypt"
include "fn/decrypt"
include "fn/sign"
include "fn/verify"
include "fn/convert"
include "fn/hash"
include "fn/declaration"
include "fn/is-declaration"
include "fn/envelope"
include "fn/is-envelope"
include "fn/is-bytes"
include "fn/key/symmetric"
include "fn/key/is-symmetric"
include "fn/key/shared"
include "fn/key/is-shared"
include "fn/key/public"
include "fn/key/is-public"
include "fn/key/private"
include "fn/key/is-private"

::

# Types

Classes in panda-confidential are lightweight wrappers for values. They provide a type-system to support the generics (`encrypt`, `decrypt`, `sign`, and `verify`) and a couple of convenience methods. Their constructors ready values for use with the underlying TweetNaCl.js invocations ([`Uint8Array`][Uint8Array]), but you can easily access the value by `encode`ing it into a form that's easier for transport or placing into a datastore.

::

include "types/key"
include "types/key/symmetric"
include "types/key/shared"
include "types/key/public"
include "types/key/private"
include "types/key-pair"
include "types/key-pair/encryption"
include "types/key-pair/signature"

::

:: generate.refs() ::
