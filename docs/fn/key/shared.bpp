### key.shared
_**key.shared** private-key, public-key &rarr; shared-key_

_**key.shared** public-key, private-key &rarr; shared-key_

- _private-key_: [`<PrivateKey>`][classPrivateKey].
- _public-key_: [`<PublicKey>`][classPublicKey].
- Returns _shared-key_: [`<SharedKey>`][classSharedKey]. [Algorithmically generates a shared secret][tweetnacl-box-before].

_**key.shared** key-data &rarr; shared-key_

- _key-data_: [`<Uint8Array>`][Uint8Array] | [`<Buffer>`][Buffer].
- Returns _shared-key_: [`<SharedKey>`][classSharedKey]. Wraps _key-data_.

##### Example
```coffeescript
import {confidential} from "panda-confidential"
{key, encrypt} = confidential()
import {keyLookup} from "my-library"

do ->
  alice = keyLookup "Alice/private"
  bob = keyLookup "Bob/public"
  fromAliceToBob = key.shared alice, bob
  envelope = await encrypt fromAliceToBob, "Hello, World!"
  send "Bob", convert to: "safe-base64", envelope
```
