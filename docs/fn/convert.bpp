::
fn
  name: "convert"
  $in:
    conversion:
      $t: k "object"
      $d: "Describes the conversion to be applied to _from_."
    from:
      $d: "The value to be converted."
  $out:
    "to":
      $d: "The result of the conversion."
::
### Conversion Description

Confidential offers a variety of conversions, specified using an object with `from` and `to` properties. When one of the properties can be inferred from the argument (ex: a byte array), it's not necessary to specify it. Attempting an unsupported conversion will throw.

##### Example

```coffeescript
import {confidential} from "panda-confidential"
{convert} = confidential()

do ->
  assert.equal "Hello, World!",
    convert from: "base64", to: "utf8", "SGVsbG8sIFdvcmxkIQ=="

  # from property can be inferred from the argument
  assert.equal "Hello, World!",
    convert to: "utf8", Buffer.from "Hello, World!"

```

- Supported formats or encodings include: `utf8`, `base64`, and `json`.

- The `safe-base64` specifies a URL-safe Base64 encoding.

- Conversions to the `bytes` format return a [`Uint8Array`][Uint8Array].

- The `bytes` format is inferred (and thus optional) as the `from` specifier for [`Uint8Array`][Uint8Array] and Node.js `Buffer` objects.
